/**
* NodeTypes around the Sponsor Package Listing
*/

prototype(Neos.NeosIo.Event:Sponsor.Packages) < prototype(Neos.NeosIo.Event:DefaultPage) {
	body {
		content {
			main = Neos.NeosIo.Event:Sponsor.Packages
		}
	}
}

prototype(Neos.NeosIo.Event:Sponsor.Packages) < prototype(Neos.Neos:Content) {
	main = Neos.Neos:ContentCollection {
		@cache.mode = 'cached'
		nodePath = 'main'
	}

	aboveListing = Neos.Neos:ContentCollection {
		@cache.mode = 'cached'
		nodePath = 'aboveListing'
	}

	packagesToRender = ${q(site).find('[instanceof Neos.NeosIo.Event:Sponsor.Package]')}

	@cache {
		mode = 'cached'

		entryIdentifier {
			node = ${node}
		}

		entryTags {
			# Flush segment if sponsor packages or opportunities change
			packages = 'NodeType_Neos.NeosIo.Event:Sponsor.Package'
			opportunities = 'NodeType_Neos.NeosIo.Event:Sponsor.Opportunity'
		}
	}
}
