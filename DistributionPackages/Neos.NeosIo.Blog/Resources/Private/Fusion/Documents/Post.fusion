prototype(Neos.NeosIo:Post) < prototype(Neos.NeosIo:DefaultPage) {
    head {
        metaDescriptionTag.attributes.content = ${String.crop(String.stripTags(q(node).property('summary')) ? String.stripTags(q(node).property('summary')) : q(node).property('metaDescription'), 152, '...')}
        metaDescriptionTag.@if.isNotBlank = true

        twitterCard {
            description.@process.useSummary = ${String.crop(String.stripTags(q(node).property('summary')) ? String.stripTags(q(node).property('summary')) : value, 197, '...')}

            image.asset {
                keyVisualSmall {
                    condition = ${q(node).property('keyVisualImageSmall')}
                    renderer = ${q(node).property('keyVisualImageSmall')}
                }
                keyVisual {
                    condition = ${q(node).property('keyVisualImage')}
                    renderer = ${q(node).property('keyVisualImage')}
                }
            }
        }

        openGraphMetaTags {
            type = 'article'
            title = ${String.crop(String.stripTags(q(node).property('title')), 67, '...')}
            description.@process.useSummary = ${String.crop(String.stripTags(q(node).property('summary')) ? String.stripTags(q(node).property('summary')) : value, 197, '...')}
            image {
                keyVisualSmall {
                    condition = ${q(node).property('keyVisualImageSmall')}
                    renderer = ${q(node).property('keyVisualImageSmall')}
                }
                keyVisual {
                    condition = ${q(node).property('keyVisualImage')}
                    renderer = ${q(node).property('keyVisualImage')}
                }
            }
            renderer.publishedTime = Neos.Fusion:Tag {
                tagName = 'meta'
                attributes {
                    property = 'article:published_time'
                    content = ${Date.format(q(node).property('datePublished'), 'c')}
                }
            }
        }

        structuredData = Neos.Fusion:Component {
            headline = ${String.stripTags(q(node).property('title'))}
            description = ${String.stripTags(q(node).property('summary')) ? String.stripTags(q(node).property('summary')) : q(node).property('metaDescription')}
            datePublished = ${Date.format(q(node).property('datePublished'), 'c')}
            dateModified = ${Date.format(q(node).property('_lastModificationDateTime'), 'c')}
            mainEntityOfPage = Neos.Neos:NodeUri {
                node = ${node}
                absolute = true
            }
            author = Neos.Seo:StructuredData.Object {
                type = 'Person'
                attributes.name = ${(q(node).property('authors') ? Data.users(q(node).property('authors')) + q(node).property('authorAlternative') : q(node).property('authorAlternative')) || 'Neos Foundation CIC'}
            }
            image = Neos.Seo:StructuredData.ImageObject {
                image = ${q(site).property('keyVisualImage')}
            }
            publisher = Neos.Seo:StructuredData.Object {
                type = 'Organization'
                attributes {
                    name = 'Neos Foundation CIC'
                    logo = Neos.Fusion:ResourceUri {
                        path = 'resource://Neos.NeosIo/Public/Images/NeosLogoSocial.png'
                    }
                }
            }

            renderer = afx`<Neos.Seo:StructuredData.RootObject type="NewsArticle" attributes={props}/>`
        }
    }

    body {
        content.main = Neos.NeosIo:PostRenderer
    }
}
