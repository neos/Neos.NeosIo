prototype(Neos.NeosIo:ImageTeaser) < prototype(Neos.Neos:ContentComponent) {
    title = Neos.Neos:Editable {
        property = 'title'
        block = false
    }
    subTitle = Neos.Neos:Editable {
        property = 'subTitle'
        block = false
    }
    rawTitle = ${q(node).property('title')}
    rawSubTitle = ${q(node).property('subTitle')}
    alternativeText = ${q(node).property('title')}
    image = ${q(node).property('image')}
    text = Neos.Neos:Editable {
        property = 'text'
    }
    fallbackImageUrl = null
    className = null
    openInNewTab = ${q(node).property('openInNewTab')}
    link = ${q(node).property('link')}
    link.@process.convertUris = Neos.Neos:ConvertUris {
        absolute = true
    }
    maximumHeight = 450
    maximumwidth = 700

    // TODO: Introduce presentation component and use that one for all other Neos.NeosIo:ImageTeaser component usages
    renderer = afx`
        <Neos.Fusion:Tag
            tagName={props.link ? 'a' : 'div'}
            attributes.href={props.link}
            attributes.href.@if={props.link && !renderingMode.isEdit}
            attributes.target={props.openInNewTab ? '_blank' : null}
            attributes.target.@if={props.link && props.openInNewTab}
            attributes.class={['imageTeaser', props.link && 'imageTeaser--isLink', className]}
        >
            <Neos.Neos:ImageTag
                @if={props.image}
                asset={props.image}
                title={props.rawTitle}
                maximumHeight={props.maximumHeight}
                maximumwidth={props.maximumWidth}
                allowCropping={true}
                width={props.width}
                height={props.height}
                async={true}
                attributes.class="imageTeaser__image"
                attributes.alt={props.alternativeText}
                attributes.style={'max-height: ' + props.maximumHeight + 'px;'}
                attributes.style.@if.set={props.maximumHeight}
            />
            <img
                @if={!props.image && props.fallbackImageUrl}
                src={props.fallbackImageUrl}
                alt={props.alternativeText}
                title={props.rawTitle}
            />
            <img
                @if={renderingMode.isEdit && !props.image && !props.fallbackImageUrl}
                class="imageTeaser__image neos-handle"
                src={StaticResource.uri('Neos.Neos', 'Public/Images/dummy-image.svg')}
                title="Dummy image"
                alt="Dummy image"
            />

            <div class="imageTeaser__contents u-invertText">
                <h5 class="imageTeaser__contents__subHeading">
                    {props.subTitle}
                </h5>
                <h3 class="imageTeaser__contents__heading">
                    {props.title}
                </h3>
                <div class="imageTeaser__contents__text">{props.text}</div>
            </div>
        </Neos.Fusion:Tag>
    `
}
