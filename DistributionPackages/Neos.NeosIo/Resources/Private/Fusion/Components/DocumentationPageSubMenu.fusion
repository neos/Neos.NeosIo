##
# This menu shows one level of documentation pages and for the current page
# the insde semantic section nested headlines.
#
# The submenu is build to work specifically in our use case, so here are a few things to consider.
# The menu renders all documentation nodes right below the first documentation node found. So currently
# the menu only works for one documentation area on the website.
# The navigation also renders a inpage-navigation for the currently active page. For that is finds all
# Neos.NodeTypes:Headline inside a Neos.NeosIo:SemanticSection with a headline size h2. It will add this
# headline to the menu if a anchor name is set on the headline. It will then look for all h3 headlines
# in the same section and render them below, again only is an anchor name is set.
##
prototype(Neos.NeosIo:DocumentationPageSubMenu) < prototype(Neos.Neos:Menu) {
    prototype(Neos.Neos:MenuItems) {
        @class = 'Neos\\NeosIo\\Fusion\\DocumentationPageSubMenuImplementation'
    }
    // TODO 9.0 migration: Neos.Neos:Menu is no template anymore! This need to be refactored.
    templatePath = 'resource://Neos.NeosIo/Private/Templates/FusionObjects/DocumentationPageSubMenu.html'

    itemCollection = Neos.Fusion:Map {
        # The first documentation page is the documentation root, show all pages below
        items = ${q(site).find('[instanceof Neos.NeosIo:DocumentationPage]').first().children().filter('[instanceof Neos.NeosIo:DocumentationPage]')}
        itemRenderer = Neos.NeosIo:DocumentationPageSubMenuItemRenderer
    }

    attributes.class = 'secondaryMenu'
    active.attributes {
        class = ${'secondaryMenu__item secondaryMenu__item--active secondaryMenu__item--menuLevel-' + item.menuLevel}
    }
    current.attributes {
        class = ${'secondaryMenu__item secondaryMenu__item--current secondaryMenu__item--menuLevel-' + item.menuLevel}
    }
    normal.attributes {
        class = ${'secondaryMenu__item secondaryMenu__item--normal secondaryMenu__item--menuLevel-' + item.menuLevel}
    }

    @cache {
        entryTags {
            1 = ${Neos.Caching.descendantOfTag(documentNode)}
            2 = ${Neos.Caching.nodeTypeTag('Neos.NeosIo:DocumentationPage', documentNode)}
        }
    }
}
