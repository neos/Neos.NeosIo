prototype(Neos.Presentation:Button) < prototype(Neos.Fusion:Component) {
    @styleguide {
        title = 'Button'
        props {
            text = 'Button Text'
        }
        useCases {
            link.props {
                text = 'Button as Link'
                variant = 'link'
            }
            icon.props {
                text = 'Button with Icon'
                icon = 'animatedArrow'
            }
        }
    }

    @propTypes {
        variant = ${PropTypes.oneOf(['button', 'link'])}
        text = ${PropTypes.string.isRequired}
        href = ${PropTypes.anyOf(PropTypes.string)}
        icon = ${PropTypes.string}
        srOnlyLabel = ${PropTypes.boolean}
        disabled = ${PropTypes.boolean}
    }

    text = null
    variant = 'button'
    icon = null
    srOnlyLabel = false

    attributes = Neos.Fusion:DataStructure
    class = null

    renderer = Neos.Fusion:Tag {
        tagName = 'button'
        attributes {
            @apply.attributes = ${props.attributes}
            disabled = ${props.disabled}
            class = ${Carbon.String.classNames(
                'n-button n-interactive',
                'n-interactive--' + props.variant,
                {
                    'n-interactive--disabled cursor-not-allowed': !!props.disabled,
                    'group': !!(props.icon == 'animatedArrow' || props.icon == 'animatedArrowMoveRight')
                },
                props.class
            )}
        }
        content = afx`
            <span @if={props.text} class={props.srOnlyLabel ? "sr-only" : null}>{props.text}</span>
            <Neos.Presentation:Icon icon={props.icon} @if={props.icon} />
        `
    }
}
