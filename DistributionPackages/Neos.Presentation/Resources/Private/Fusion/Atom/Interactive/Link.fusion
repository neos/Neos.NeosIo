prototype(Neos.Presentation:Link) < prototype(Neos.Fusion:Component) {
    @styleguide {
        props {
            content = 'Link Text'
            href = '#link'
        }
        useCases.icon.props {
            content = 'Link with Icon'
            href = '#link'
            icon = 'animatedArrow'
        }
    }

    @propTypes {
        variant = ${PropTypes.oneOf(['button', 'link'])}
        href = ${PropTypes.string}
        content = ${PropTypes.string}
        ariaLabel = ${PropTypes.string}
        icon = ${PropTypes.string}
        disabled = ${PropTypes.boolean}
        class = ${PropTypes.any}
    }

    variant = 'link'
    attributes = Neos.Fusion:DataStructure

    @private.class = ${Carbon.String.classNames(
        'n-link n-interactive',
        'n-interactive--' + props.variant,
        {
            'n-interactive--disabled cursor-not-allowed': !!props.disabled,
            'group': !!(props.icon == 'animatedArrow' || props.icon == 'animatedArrowMoveRight')
        },
        props.class
    )}

    @if {
        hasHref = ${this.href}
        hasLabelOrContent = ${this.content || this.ariaLabel}
    }

    renderer = afx`
        <a
            {...props.attributes}
            href={props.disabled ? null : props.href}
            aria-label={props.ariaLabel}
            class={private.class}
        >
            {props.content}
            <Neos.Presentation:Icon icon={props.icon} @if={props.icon} />
        </a>
    `
}
