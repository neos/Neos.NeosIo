prototype(Neos.Presentation:HighlightBoxes.Box) < prototype(Neos.Fusion:Component) {

    @propTypes {
        inBackend = PropTypes:Bool
        displayType = ${PropTypes.oneOf(['icon', 'imageCircle', 'imageHeader'])}
        image = PropTypes:DataStructure {
            imageSource = PropTypes:InstanceOf {
                type = '\\Sitegeist\\Kaleidoscope\\Domain\\ImageSourceInterface'
            }
        }
        tag = PropTypes:String
        heading = PropTypes:String
        description = PropTypes:String
        link = PropTypes:String
        linkLabel = PropTypes:String
    }

    inBackend = false
    displayType = 'icon'
    imageWidth = 576

    @private {
        isIcon = ${props.displayType == 'icon'}
        isImageHeader = ${props.displayType == 'imageHeader'}
        imageRatio = ${private.isImageHeader ? 16 / 9 : 1}
    }

    renderer = afx`
        <div class={Tailwind.merge('relative flex flex-col bg-gray-light', { 'group': !!props.link })}>
            <figure
                @if={private.isIcon}
                class="w-12 h-12 aspect-square rounded-full mx-4 mt-6 bg-lightblue/70 text-white grid place-content-center"
            >
                <Neos.Presentation:Icon name={props.icon} class="w-6 h-6" />
            </figure>

            <figure
                @if={!private.isIcon}
                class={Tailwind.merge('overflow-hidden', private.isImageHeader ? 'aspect-video' : 'size-32 aspect-square rounded-full overflow-hidden self-center mx-4 mt-8 mb-2')}
            >
                <Sitegeist.Kaleidoscope:Image
                    @if={props.image && props.image.imageSource} {...props.image}
                    class="size-full object-cover will-change-transform duration-700 group-hover:scale-110"
                    srcset="1x,2x"
                    width={props.imageWidth}
                    height={Math.round(props.imageWidth / private.imageRatio)}
                />
            </figure>

            <div class="flex-1 grid gap-2 p-4">
                <div
                    @if={!private.isIcon && (props.inBackend || props.tag)}
                    class={Tailwind.merge('text-xs bg-lightblue/70 text-white px-2 py-1 rounded-full', private.isImageHeader ? 'absolute top-4 left-4' : 'self-start justify-self-start')}
                >
                    {props.tag}
                </div>

                <Neos.Presentation:Headline
                    @if={props.inBackend || props.heading}
                    tagName="h3" display="title-md" text={props.heading}
                    class="text-darkblue group-hover:text-lightblue text-balance duration-300"
                />

                <Neos.Presentation:Paragraph
                    @if={!private.isImageHeader && (props.inBackend || props.description)}
                    text={props.description} class="text-pretty"
                />

                <a @if={props.link && props.linkLabel}
                   href={props.link}
                   class="mt-4 flex gap-2 text-darkblue self-end">
                    <span class="absolute inset-0 pointer-events-auto"></span>
                    <span class="flex-1 text-balance">{props.linkLabel}</span>
                    <Neos.Presentation:Atom.AnimatedArrow />
                </a>
            </div>
        </div>
    `
}
