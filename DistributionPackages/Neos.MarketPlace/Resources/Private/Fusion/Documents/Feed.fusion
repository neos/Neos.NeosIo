prototype(Neos.MarketPlace:Feed) < prototype(Neos.Fusion:Component) {
    dateFilter = ${Date.subtract(Date.now(), 'P30D')}

    @private {
        packages = ${MarketPlaceSearch.query(documentNode)}
        packages.@process {
            nodeType = ${value.nodeType('Neos.MarketPlace:Package')}
            onlyRecent = ${value.greaterThan('lastVersion.time', props.dateFilter)}
            onlyRecent.@if.hasDateFilter = ${props.dateFilter}
            sort = ${value.sortDesc('lastVersion.time')}
            limit = ${value.limit(9999)}
            execute = ${value.execute().toArray()}
        }

        releasedVersions = ${MarketPlace.Package.getReleasedVersions(
            private.packages,
            props.dateFilter
        )}
    }

    renderer = Neos.Fusion:Http.Message {
        httpResponseHead {
            headers.Content-Type = 'application/xml'
        }

        doctype = '<?xml version="1.0" encoding="utf-8"?>'
        doctype.@position = 'start 100'

        xsl = Neos.Fusion:ResourceUri {
            path = 'resource://Neos.MarketPlace/Public/Assets/feed.xsl'
        }
        xsl.@process.wrap = ${'<?xml-stylesheet media="screen" type="text/xsl" href="' + value + '" version="2.0"?>'}
        xsl.@position = 'after doctype 100'

        feed = afx`
            <feed xmlns="http://www.w3.org/2005/Atom">
                <title>Latest Neos CMS package releases</title>
                <subtitle>This feed contains all Neos CMS and Flow Framework compatible package releases in the last
                    30 days.
                </subtitle>
                <logo>
                    <Neos.Fusion:ResourceUri path="resource://Neos.NeosIo/Public/Images/NeosLogoSocial.png"
                                             absolute={true} />
                </logo>
                <id>urn:uuid:{documentNode.aggregateId}</id>
                <link rel="alternate" type="text/html" @children="attributes.href">
                <Neos.Neos:NodeUri node={documentNode} format="html" absolute={true} />
                </link>
                <link rel="self" type="application/atom+xml" @children="attributes.href">
                <Neos.Neos:NodeUri node={documentNode} format="atom" absolute={true} />
                </link>
                <Neos.Fusion:Loop items={private.releasedVersions} itemName="version">
                    <Neos.MarketPlace:Component.Feed.Version {...version} />
                </Neos.Fusion:Loop>
            </feed>
        `
        feed.@position = 'after doctype'
    }

    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${Neos.Caching.entryIdentifierForNode(documentNode)}
            format = 'atom'
        }
        entryTags {
            node = ${Neos.Caching.nodeTag(documentNode)}
        }
        maximumLifetime = 7200
    }
}

root {
    marketPlaceFeed {
        @position = 'before format'
        condition = ${request.format == 'atom' && q(documentNode).is('[instanceof Neos.MarketPlace:RepositoryStorage]')}
        renderer = Neos.MarketPlace:Feed
    }
}
