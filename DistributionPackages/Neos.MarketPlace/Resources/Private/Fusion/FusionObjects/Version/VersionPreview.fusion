prototype(Neos.MarketPlace:VersionPreview) < prototype(Neos.Fusion:Component) {
    version = ${String.isBlank(request.arguments.version) ? null : String.trim(request.arguments.version)}

    selectedVersion = ${this.version ?
        q(node).children('versions').find('[instanceof Neos.MarketPlace:Version][version = "' + this.version + '"]').get(0) :
        q(node).children('versions').children('[stability = true]').sort('versionNormalized', 'DESC').get(0)
    }

    renderer = afx`
        <section class="block block--versions" data-component="PackageVersionBrowser" data-version={props.version} data-path={node.path}>
            <Neos.MarketPlace:Version @context.node={props.selectedVersion} />
        </section>
    `

    @cache {
        mode = 'cached'

        entryIdentifier {
            node = ${node}
            version = ${request.arguments.version ? request.arguments.version : 'latest'}
            format = ${request.format}
        }

        entryTags {
            1 = ${Neos.Caching.nodeTag(node)}
            2 = ${Neos.Caching.descendantOfTag(node)}
        }
    }
}
