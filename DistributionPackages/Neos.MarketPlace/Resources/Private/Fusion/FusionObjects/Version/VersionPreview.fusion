prototype(Neos.MarketPlace:VersionPreview) < prototype(Neos.Fusion:Component) {
    version = ${MarketPlace.Package.sanitiseVersionArgument(request.arguments.version)}
    findByVersionQuery = ${q(node).children('versions').find('[instanceof Neos.MarketPlace:Version][version = "' + this.version + '"]').get(0)}
    findLastVersionQuery = ${q(q(node).property('lastVersion')).get(0)}
    versionNode = ${this.version ? this.findByVersionQuery : this.findLastVersionQuery}

    renderer.@process.debug = Neos.Fusion:Debug.Console {
        value = ${props}
    }

    renderer = afx`
      <section
        class="block block--versions"
        data-component="PackageVersionBrowser"
        data-version={props.version}
        data-path={Neos.Node.serializedNodeAddress(node)}
      >
          <Neos.MarketPlace:Version @context.node={props.versionNode} @if.hasNode={props.versionNode} />
          <span @if={!props.versionNode} class="error">
            {I18n.translate('versions.versionNotFound', 'No released version found', [], 'Main', 'Neos.MarketPlace')}
          </span>
      </section>
    `
}
