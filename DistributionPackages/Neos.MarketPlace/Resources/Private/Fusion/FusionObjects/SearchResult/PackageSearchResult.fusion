prototype(Neos.MarketPlace:PackageSearchResult) < prototype(Neos.MarketPlace:DocumentSearchResult) {
    lastVersion = ${q(node).property('lastVersion')}
    lastVersionLabel = ${q(this.lastVersion).property('version')}
    lastVersionTime = ${q(this.lastVersion).property('time')}
    description = ${String.isBlank(q(this.lastVersion).property('description')) ? q(node).property('description') : q(this.lastVersion).property('description')}

    renderer >
    renderer = afx`
        <article class="result-list__item">
            <header>
                <h4 class="result-list__title">
                    <Neos.Neos:NodeLink node={props.node}>
                      <i class="fas fa-puzzle-piece"></i> {String.stripTags(props.title)}
                    </Neos.Neos:NodeLink>
                    <small>{props.lastVersionLabel}</small>
                </h4>
            </header>
            <div class="result-list__description" @if={props.description}>
                {String.stripTags(props.description)}
            </div>
            <footer class="result-list__meta">
                <Neos.MarketPlace:PackageLastActivity />
                <Neos.MarketPlace:PackageMetrics
                    @process.prefixDash={' &ndash; ' + value}
                />
                <Neos.MarketPlace:Tags
                    data={q(props.lastVersion).property('keywords')}
                    @if.hasKeywords={q(props.lastVersion).property('keywords')}
                    @process.prefixDash={' &ndash; ' + value}
                />
            </footer>
        </article>
    `
}
