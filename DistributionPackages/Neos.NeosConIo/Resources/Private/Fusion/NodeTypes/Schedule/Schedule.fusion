prototype(Neos.NeosConIo:Schedule) < prototype(Neos.Neos:ContentComponent) {
    @if.eventNodeIsSet = ${q(event).is('[instanceof Neos.NeosConIo:Event]')}
    @if.dateIsSet = ${q(q(event).property('eventDate')).is('[instanceof DateTime]')}

    @context {
        event = ${q(node).property('event')}
        days = Neos.Fusion:RawArray {
           day1 = ${q(node).property('event') && q(q(node).property('event')).property('eventDate')}
           day2 = ${q(node).property('event') && q(q(node).property('event')).property('eventDate') && Date.add(q(q(node).property('event')).property('eventDate'), 'P1D')}
        }
    }

    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${node}
        }
        tags {
            1 = ${Neos.Caching.nodeTag(node)}
            2 = ${Neos.Caching.nodeTypeTag('Neos.NeosConIo:Talk')}
            3 = ${Neos.Caching.nodeTypeTag('Neos.NeosConIo:Event')}
            4 = ${Neos.Caching.nodeTypeTag('Neos.NeosConIo:Room')}
            5 = ${Neos.Caching.nodeTypeTag('Neos.NeosConIo:Speaker')}
        }
    }

    renderer = afx`
        <div class="schedule" data-component="Schedule">
            <header class="schedule__header">
                <div class="days">
                    <Neos.NeosConIo:Days />
                </div>
                <div class="rooms">
                   <Neos.NeosConIo:Rooms />
                </div>
            </header>
            <ul class="talks">
                <Neos.NeosConIo:Talks />
            </ul>
        </div>
    `
}