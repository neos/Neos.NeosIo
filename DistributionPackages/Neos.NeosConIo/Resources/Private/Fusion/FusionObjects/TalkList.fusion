prototype(Neos.NeosConIo:TalkList) < prototype(Neos.Fusion:Loop) {
    // API to the outside: "items" to render
    items = ${q(site).find('[instanceof Neos.NeosConIo:Talk]')}

    @context.eventToFilter = ${q(node).property('eventToShowTalksFor')}
    @process.wrapWithUl = ${'<ul class="talkList">' + value + '</ul>'}
    itemName = "node"
    itemRenderer = Neos.Fusion:Tag {
        tagName = 'li'
        attributes.class = 'talkList__item'
        content = Neos.NeosIo:ImageTeaser {
            // node is the talk here
            title = ${q(node).property('title')}
            image = ${q(node).property('thumbnail')}
            fallbackImageUrl = ${(q(node).property('video') && !q(node).property('thumbnail')) ? "https://img.youtube.com/vi/" + q(node).property('video') + "/maxresdefault.jpg" : null}
            text = ''
            className = 'imageTeaser--relatedTalk'
            link = Neos.Neos:NodeUri {
                node = ${node}
                absolute = true
            }
        }

    }
    // "node" is the current talk here
    itemRenderer.@if.talkHasCorrectEvent = ${q(node).property('event').aggregateId.value == eventToFilter.aggregateId.value}

    @cache {
        mode = 'cached'
        entryTags {
            # when a talk is changed, we need to rerender this page.
            1 = ${Neos.Caching.nodeTypeTag('Neos.NeosConIo:Talk', node)}
        }
    }
}
